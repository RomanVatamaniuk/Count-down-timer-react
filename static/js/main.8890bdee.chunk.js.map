{"version":3,"sources":["Components/Timer.js","Components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Timer","time","newYears","totalSeconds","Date","days","Math","floor","hours","minutes","seconds","useState","day","setDay","hour","setHour","minute","setMinute","second","setSecond","setTimeout","className","Form","date","setDate","setTime","onSubmit","e","preventDefault","console","log","type","min","max","value","onChange","target","App","a","getFullYear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAqDeA,EAjDD,SAAC,GAAW,IAAVC,EAAS,EAATA,KACRC,EAAQ,gBAAYD,GAGpBE,GAFiB,IAAIC,KAAKF,GACV,IAAIE,MACyB,IAE3CC,EAAOC,KAAKC,MAAMJ,EAAc,KAAO,IACvCK,EAAQF,KAAKC,MAAMJ,EAAc,MAAQ,GACzCM,EAAUH,KAAKC,MAAMJ,EAAe,IAAM,GAC1CO,EAAUJ,KAAKC,MAAMJ,GAAgB,GAG3C,EAAsBQ,mBAAS,MAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAwBF,mBAAS,MAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA4BJ,mBAAS,MAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAA4BN,mBAAS,MAArC,mBAAOO,EAAP,KAAeC,EAAf,KAUA,OARAC,YAAW,WACPP,EAAOR,GACPU,EAAQP,GACRS,EAAUR,GACVU,EAAUT,KACX,KAIC,sBAAKW,UAAU,YAAf,UACA,uDAAwBpB,EAAxB,WACI,sBAAKoB,UAAU,QAAf,UACI,sBAAKA,UAAU,OAAf,UACI,4BAAIT,IACJ,2CAEJ,sBAAKS,UAAU,OAAf,UACI,4BAAIP,IACJ,4CAEJ,sBAAKO,UAAU,OAAf,UACI,4BAAIL,IACJ,8CAEJ,sBAAKK,UAAU,OAAf,UACI,4BAAIH,IACJ,qDCzBLI,G,MAlBF,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,QAASvB,EAAiB,EAAjBA,KAAMwB,EAAW,EAAXA,QAQhC,OACA,qBAAKJ,UAAU,OAAOK,SAPH,SAACC,GAChBA,EAAEC,iBACFH,EAAQF,GACRM,QAAQC,IAAI7B,IAIhB,SACI,iCACI,uBAAO8B,KAAK,SAASC,IAAKT,EAAMU,IAAI,OAAQZ,UAAU,QAAQa,MAAOX,EAAMY,SAAU,SAACR,GAAKH,EAAQG,EAAES,OAAOF,UAC5G,uBAAOA,MAAM,WAAWH,KAAK,SAASV,UAAU,kBCC7CgB,MAZf,WACE,IAAIC,GAAI,IAAIlC,MAAOmC,cAAc,EACjC,EAAwB5B,mBAAS2B,GAAjC,mBAAOf,EAAP,KAAaC,EAAb,KACA,EAAwBb,mBAAS2B,GAAjC,mBAAOrC,EAAP,KAAawB,EAAb,KACA,OACE,gCACE,cAAC,EAAD,CAAOxB,KAAMA,IACb,cAAC,EAAD,CAAMsB,KAAMA,EAAMC,QAASA,EAASvB,KAAMA,EAAMwB,QAASA,QCAhDe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8890bdee.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Timer.css';\r\nimport { useState } from 'react';\r\n\r\nconst Timer = ({time}) =>{\r\n    let newYears = `1 Jan ${time}`;\r\n    const newYearsDate = new Date(newYears);\r\n    const currentDate = new Date();\r\n    let totalSeconds = (newYearsDate - currentDate)/ 1000;\r\n\r\n    const days = Math.floor(totalSeconds/ 3600 / 24);\r\n    const hours = Math.floor(totalSeconds/ 3600) % 24;\r\n    const minutes = Math.floor(totalSeconds / 60) % 60;\r\n    const seconds = Math.floor(totalSeconds) % 60;\r\n\r\n    \r\n    const [day, setDay] = useState('00');\r\n    const [hour, setHour] = useState('00');\r\n    const [minute, setMinute] = useState('00');\r\n    const [second, setSecond] = useState('00');\r\n\r\n    setTimeout(()=>{\r\n        setDay(days);\r\n        setHour(hours);\r\n        setMinute(minutes);\r\n        setSecond(seconds);\r\n    }, 1000)\r\n\r\n\r\n    return(\r\n        <div className=\"container\">\r\n        <h1>{`Time untill new ${time} year`}</h1>\r\n            <div className=\"timer\">\r\n                <div className=\"time\">\r\n                    <p>{day}</p>\r\n                    <span>Days</span>\r\n                </div>\r\n                <div className=\"time\">\r\n                    <p>{hour}</p>\r\n                    <span>Hours</span>\r\n                </div>\r\n                <div className=\"time\">\r\n                    <p>{minute}</p>\r\n                    <span>Minutes</span>\r\n                </div>\r\n                <div className=\"time\">\r\n                    <p>{second}</p>\r\n                    <span>Seconds</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Timer;","import React from 'react';\r\n//import { useState } from 'react'\r\nimport './Form.css'\r\n\r\nconst Form = ({date, setDate, time, setTime})=>{\r\n\r\n    const handleDate = (e) =>{\r\n        e.preventDefault();\r\n        setTime(date)\r\n        console.log(time)\r\n    }\r\n\r\n    return(\r\n    <div className=\"form\" onSubmit={handleDate}>\r\n        <form>\r\n            <input type=\"number\" min={date} max=\"3000\"  className=\"input\" value={date} onChange={(e)=>{setDate(e.target.value)}}/>\r\n            <input value='Set Time' type=\"submit\" className=\"setter\" />\r\n        </form>\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default Form;","import './App.css';\nimport Timer from './Components/Timer'\nimport Form from './Components/Form'\nimport { useState } from 'react'\n\nfunction App() {\n  let a = new Date().getFullYear()+1;\n  const [date, setDate] = useState(a);\n  const [time, setTime] = useState(a);\n  return (\n    <div>\n      <Timer time={time}/>\n      <Form date={date} setDate={setDate} time={time} setTime={setTime}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}